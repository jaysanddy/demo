<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vk.mapper.InspectionStatusMapper">
  <resultMap id="BaseResultMap" type="com.vk.model.InspectionStatus">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="deal_time" jdbcType="TIMESTAMP" property="dealTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.vk.model.InspectionStatus">
    <result column="result" jdbcType="LONGVARCHAR" property="result" />
  </resultMap>
  <sql id="Base_Column_List">
    id, record_id, content, images, deal_time, create_time
  </sql>
  <sql id="Blob_Column_List">
    result
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vk_inspection_status
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vk_inspection_status
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vk.model.InspectionStatus">
    insert into vk_inspection_status (id, record_id, content, 
      images, deal_time, create_time, 
      result)
    values (#{id,jdbcType=INTEGER}, #{recordId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{images,jdbcType=VARCHAR}, #{dealTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{result,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vk.model.InspectionStatus">
    insert into vk_inspection_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recordId != null">
        record_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="dealTime != null">
        deal_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="result != null">
        result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="dealTime != null">
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="result != null">
        #{result,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vk.model.InspectionStatus">
    update vk_inspection_status
    <set>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="dealTime != null">
        deal_time = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vk.model.InspectionStatus">
    update vk_inspection_status
    set record_id = #{recordId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      result = #{result,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vk.model.InspectionStatus">
    update vk_inspection_status
    set record_id = #{recordId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      deal_time = #{dealTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getStatus" parameterType="Map" resultType="Map">
    select <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vk_inspection_status where record_id = #{recordId}
  </select>
</mapper>