package com.vk.controller;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.vk.request.DemoResult;
import com.vk.request.InspectionAnswerQuestions;
import com.vk.response.Result;
import com.vk.service.InspectionRecordService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.lang.reflect.Type;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by weijin on 2018/6/25.
 */
@RestController
@RequestMapping("inspectionRecord")
@Api(value ="/inspectionRecord", description ="问题接口")
public class InspectionRecordController {
    @Resource
    private InspectionRecordService inspectionRecordService;

    @ApiOperation(value="创建发布问题", notes="")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "title", value = "标题", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "riverName", value = "河流名称", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "riverId", value = "河流Id", required = true, dataType = "int", paramType = "path"),
            @ApiImplicitParam(name = "riverNo", value = "河流编号", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "towns", value = "所属乡镇", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "lat", value = "经度", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "lng", value = "纬度", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "address", value = "当前所在位置", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "first_assess", value = "河道评定", required = true, dataType = "int", paramType = "path"),
            @ApiImplicitParam(name = "describe", value = "河道描述", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "photoFiles", value = "现场图片", required = true, dataType = "list", paramType = "path"),
            @ApiImplicitParam(name = "score", value = "河道总分", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "rectification", value = "是否需要整改", required = true, dataType = "int", paramType = "path"),
            @ApiImplicitParam(name = "detail", value = "选择河湖问题", required = true, dataType = "list", paramType = "path"),
    })
    @RequestMapping(value = "createRecord",method = RequestMethod.POST)
    public Result createRecord(Integer areaId,String title, String riverName, Integer riverId, String riverNo, String towns, String lat, String lng, String address, Integer firstAssess, String describe, String[] photoFiles, Integer score, Integer rectification,String detail) throws ParseException {

        Gson gson = new Gson();
        Type type = new TypeToken<ArrayList<DemoResult>>(){}.getType();
        List<DemoResult> demoResults = gson.fromJson(detail,type);
        return inspectionRecordService.createRecord(areaId,title, riverName, riverId, riverNo, towns, lat, lng, address, firstAssess, describe, photoFiles, score, rectification,demoResults);
    }
}
