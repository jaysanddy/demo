package com.vk.controller;

import com.vk.response.Result;
import com.vk.response.ResultData;
import com.vk.service.RiverService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;

/**
 * Created by weijin on 2018/6/21.
 */
@RestController
@RequestMapping("river")
@Api(value ="/river", description ="河流接口")
public class RiverController {
    @Resource
    private RiverService riverService;

    //创建河流
    @ApiOperation(value="创建河流", notes="")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "riverName", value = "河流名字", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "lengths", value = "河流长度", required = true, dataType = "double", paramType = "path"),
            @ApiImplicitParam(name = "beginArea", value = "河流开始地区", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "endArea", value = "河流结束地区", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "basinArea", value = "河流流域面积", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "remark", value = "备注", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "areas", value = "行政区域", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "areaId", value = "地区id", required = true, dataType = "int", paramType = "path"),
            @ApiImplicitParam(name = "riverLevelIds", value = "河流级别", required = true, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "riverNo", value = "河流编号", required = true, dataType = "string", paramType = "path")
    })
    @RequestMapping(value = "createRiver",method = RequestMethod.POST)
    public Result createRiver(@RequestParam String riverName, Double lengths, String beginArea, String endArea, String basinArea, String remark, String areas,@RequestParam Integer areaId, String riverLevelIds,@RequestParam String riverNo) throws Exception{
        return riverService.createRiver(riverName, lengths, beginArea, endArea, basinArea, remark, areas, areaId, riverLevelIds,riverNo);
    }

    //获得河流列表
    @ApiOperation(value="后台获取河流集合", notes="")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "riverName", value = "河流名字", required = false, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "areaId", value = "地区id", required = false, dataType = "int", paramType = "path"),
            @ApiImplicitParam(name = "riverLevelIds", value = "河流级别", required = false, dataType = "string", paramType = "path"),
            @ApiImplicitParam(name = "page", value = "页", required = false, dataType = "int", paramType = "path"),
            @ApiImplicitParam(name = "rows", value = "码数", required = false, dataType = "int", paramType = "path"),
    })
    @RequestMapping(value = "getRivers",method = RequestMethod.POST)
    public ResultData getRivers(Integer riverId,String riverName, Integer areaId, Integer riverLevelId, @RequestParam(name = "page",defaultValue = "1") Integer pageNum,
                                @RequestParam(name = "rows",defaultValue = "10") Integer pageSize){
        return riverService.getRivers(riverId,riverName, areaId, riverLevelId, pageNum, pageSize);
    }

    @ApiOperation(value="APP获取河流集合", notes="")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "riverName", value = "河流名字", required = false, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "areaId", value = "地区id", required = false, dataType = "int", paramType = "path"),
            @ApiImplicitParam(name = "riverLevelId", value = "河流级别", required = false, dataType = "string", paramType = "path"),
    })
    @RequestMapping(value = "getRiversByApp",method = RequestMethod.POST)
    public ResultData getRiversByApp(String riverName,Integer areaId,Integer riverLevelId){
        return riverService.getRiversByApp(riverName, areaId, riverLevelId);
    }

    @RequestMapping(value = "updateRiver",method = RequestMethod.POST)
    public Result updateRiver(Integer riverId,String riverName,Double lengths,String beginArea,String endArea,String basinArea,String remark,String areas,Integer areaId,String riverLevelIds,String riverNo){
        return riverService.updateRiver(riverId,riverName,lengths,beginArea,endArea,basinArea,remark,areas,areaId,riverLevelIds,riverNo);
    }
}
